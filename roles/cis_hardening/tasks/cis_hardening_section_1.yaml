---
#CIS hardening based on benchmark version 1.0.0

# Already done as part of kickstart (make /boot write protected)
#- name: Base hardening
#  shell: "{{ item }}"
#  with_items:
#    #CIS 1.1.21 Disable Automounting
#    - "/bin/systemctl disable autofs"
    #CIS 1.4.1 ensure permissions on bootloader config are configured
#    - "/bin/chown root:root /boot/grub/grub.cfg"
#    - "/bin/chmod og-rwx /boot/grub/grub.cfg"
    #CIS 1.6.2.2 Ensure all AppArmor Profiles are enforcing
#    - "/usr/sbin/aa-enforce /etc/apparmor.d/*"
#  become: true
#  become_user: root
#  ignore_errors: yes

# todo Henry Piard: come up with apt-cache policy
#- name: CIS 1.2.1 apt-cache policy
#  command:

# todo Henry Piard: come up with a list of trusted GPG keys
#- name: CIS 1.2.2 Ensure GPG keys are configured
#  command:

# todo Henry Piard: come up with tripwire automated install
#- name: CIS 1.3.1 Filesystem Integrity Checking (Tripwire) Aide is an opensource alternative
#  command:

# todo Henry Piard: come up with tripwire is truly enabled
#- name: CIS 1.3.2 Ensure filesystem integrity is regularly checked
#  command:

# todo Henry Piard: come up with a solution
#- name: CIS Ensure bootloader password is set

# todo Henry Piard; This needs to be implemented to work via TPAM
# Use passlib to get a password shadow
# python -c "from passlib.hash import sha512_crypt; import getpass; print sha512_crypt.encrypt(getpass.getpass())"
#- name: Ensure authentication required for single user mode
#  user: name=root update_password=always password=$6$rounds=656000$UhsCJ5LJKOrGwrfN$fbaG8itiBZo6U6zhGA.czyUOg7SFTKPbF14nHeCvR3GazB8rquTXDC7UqtXLhogBa9OhnjjEBCkqL6MU7NWrL.
#  become: true
#  become_user: root


# CIS 1.1.1.1 Ensure mounting of cramfs filesystems is disabled
- name: "CIS 1.1.1.1  Ensure mounting of cramfs filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install cramfs(\\s|$)"
      line: "install cramfs /bin/true"
      create: yes
  become: true
  become_user: root

# CIS 1.1.1.2 Ensure mounting of freevxfs filesystems is disabled
- name: "CIS 1.1.1.2  Ensure mounting of freevxfs filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install freevxfs(\\s|$)"
      line: "install freevxfs /bin/true"
      create: yes
  become: true
  become_user: root

# CIS 1.1.1.3 Ensure mounting of jffs2 filesystems is disabled
- name: "CIS 1.1.1.3  Ensure mounting of jffs2 filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install jffs2(\\s|$)"
      line: "install jffs2 /bin/true"
      create: yes
  become: true
  become_user: root

# CIS 1.1.1.4 Ensure mounting of hfs filesystems is disabled
- name: "CIS 1.1.1.4  Ensure mounting of hfs filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install hfs(\\s|$)"
      line: "install hfs /bin/true"
      create: yes
  become: true
  become_user: root

# CIS 1.1.1.5 Ensure mounting of hfsplus filesystems is disabled
- name: "CIS 1.1.1.5  Ensure mounting of hfsplus filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install hfsplus(\\s|$)"
      line: "install hfsplus /bin/true"
      create: yes
  become: true
  become_user: root

# CIS 1.1.1.6 Ensure mounting of squashfs filesystems is disabled
- name: "CIS 1.1.1.6  Ensure mounting of squashfs filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install squashfs(\\s|$)"
      line: "install squashfs /bin/true"
      create: yes
  become: true
  become_user: root

# CIS 1.1.1.7 Ensure mounting of udf filesystems is disabled
- name: "CIS 1.1.1.7  Ensure mounting of udf filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install udf(\\s|$)"
      line: "install udf /bin/true"
      create: yes
  become: true
  become_user: root

# CIS 1.1.1.8 Ensure mounting of squashfs vfat is disabled
- name: "CIS 1.1.1.8  Ensure mounting of vfat filesystems is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install vfat(\\s|$)"
      line: "install vfat /bin/true"
      create: yes
  become: true
  become_user: root

- name: "SCORED | 1.1.21 | PATCH | Ensure sticky bit is set on all world-writable directories"
  shell: df --local -P | awk {'if (NR!=1) print $6'} | xargs -I '{}' find '{}' -xdev -type d -perm -0002 2>/dev/null | xargs chmod a+t
  changed_when: no
  failed_when: no
  become: true
  become_user: root

- name: "SCORED | 1.1.22 | PATCH | Disable Automounting"
  service:
      name: autofs
      enabled: no
  ignore_errors: yes
  become: true
  become_user: root

# NOTSCORED | 1.2.5 | PATCH | Disable the rhnsd Daemon
- name: NOTSCORED | 1.2.5 | PATCH | Disable the rhnsd Daemon
  service:
      name: rhnsd
      state: stopped
      enabled: no
  ignore_errors: yes

## since we are installing and configuring tripwire for the same file system integrity check, we are not nstalling aide in edpc and eppc env
# SCORED | 1.3.1 | PATCH | Ensure AIDE is installed
- name: "SCORED | 1.3.1 | PATCH | Ensure AIDE is installed"
  yum:
      name: aide
      state: present
#  when: env_input not in ['edpc','eppc']
# SCORED | 1.3.1 | PATCH | Create /var/lib/aide/aide.db.gz
- name: "SCORED | 1.3.1 | PATCH | Ensure AIDE is installed"
  command: /usr/sbin/aide --init -B 'database_out=file:/var/lib/aide/aide.db.gz'
  args:
      creates: /var/lib/aide/aide.db.gz
  changed_when: no
  failed_when: no
  async: 45
  poll: 0
#  when: env_input not in ['edpc','eppc']

# SCORED | 1.3.2 | PATCH | Ensure filesystem integrity is regularly checked
- name: "SCORED | 1.3.2 | PATCH | Ensure filesystem integrity is regularly checked"
  cron:
      name: Run AIDE integrity check
      cron_file: "/etc/crontab"
      user: "root"
      minute: "0"
      hour: "5"
      day: "*"
      month: "*"
      weekday: "*"
      job: "/usr/sbin/aide --check"
#  when: env_input not in ['edpc','eppc']
 # SCORED | 1.4.1 | PATCH | Ensure permissions on bootloader config are configured
- name: "SCORED | 1.4.1 | PATCH | Ensure permissions on bootloader config are configured"
  stat:
      path: /etc/grub2.cfg
  register: grub_cfg

# SCORED | 1.4.1 | PATCH | Ensure permissions on bootloader config are configured
- name: "SCORED | 1.4.1 | PATCH | Ensure permissions on bootloader config are configured"
  file:
      path: "{{ grub_cfg.stat.lnk_source }}"
      owner: root
      group: root
      mode: 0600
  when:
      - grub_cfg.stat.exists and grub_cfg.stat.islnk

# CIS 1.5.1 Ensure core dumps are restricted (limits.conf)
- name: Restrict core dumps limits.conf
  lineinfile:
      state: present
      dest: /etc/security/limits.conf
      regexp: '^#?\\*.*core'
      line: '*                hard    core            0'
      insertbefore: '^# End of file'
  become: true
  become_user: root

# CIS 1.5.1.Ensure core dumps are restricted (sysctl.conf)
- name: Restrict core dumps sysctl.conf
  sysctl:
      name: fs.suid_dumpable
      value: 0
      state: present
      reload: yes
      sysctl_set: yes
      ignoreerrors: yes
  become: true
  become_user: root

# CIS 1.5.3.Ensure address space layout randomization (ASLR) is enabled
- name: Ensure address space layout randomization
  sysctl:
      name: kernel.randomize_va_space
      value: 2
      state: present
      reload: yes
      sysctl_set: yes
      ignoreerrors: yes
  become: true
  become_user: root

# CIS 1.5.4 Ensure prelink is disabled
- name: Remove package prelink
  yum:
    name: prelink
    state: absent
  become: true
  become_user: root

# CIS 1.6.1.1 Ensure SELinux is not disabled in bootloader configuration
- name: Ensure SELinux is not disabled in bootloader (step 1)
  replace:
      dest: /etc/default/grub
      regexp: '(selinux|enforcing)\s*=\s*0\s*'
      follow: yes
  register: selinux_grub_patch
  ignore_errors: yes
  notify: generate new grub config
  become: true
  become_user: root

# CIS 1.6.1.2 Ensure SELinux state is enforcing
- name: Ensure SELinux state is enforcing
  selinux:
    conf: /etc/selinux/config
    policy: "{{ rhel7cis_selinux_pol }}"
    state: enforcing
  become: true
  become_user: root
  ignore_errors: yes

- name: Ensure SELinux policy is configured
  selinux:
      conf: /etc/selinux/config
      policy: "{{ rhel7cis_selinux_pol }}"
      state: enforcing
  become: true
  become_user: root
  ignore_errors: yes

- name: Ensure SETroubleshoot is not installed
  yum:
      name: setroubleshoot
      state: absent
  become: true
  become_user: root
  ignore_errors: yes

# CIS 1.6.1.5 Ensure the MCS Translation Service (mcstrans) is not installed
- name: Ensure the MCS Translation Service (mcstrans) is not installed
  yum:
      name: mcstrans
      state: absent
  become: true
  become_user: root

# CIS 1.6.2 Ensure SELinux is installed
- name: Ensure SELinux is installed
  yum:
      name: libselinux
      state: present
  become: true
  become_user: root

# CIS 1.7.1.1 Ensure message of the day is configured properly
#- name: /etc/motd configured
#  copy:
#    src: files/etc/motd
#    dest: /etc/motd
#    owner: root
#    group: root
#    mode: 0644
#  become: true
#  become_user: root

# CIS 1.7.1.2 Ensure local login warning banner is configured properly
- name: /etc/issue configured
  copy:
    src: files/etc/issue
    dest: /etc/issue
    owner: root
    group: root
    mode: 0644
  become: true
  become_user: root

# CIS 1.7.1.3 Ensure remote login warning banner is configured properly
- name: /etc/issue.net configured
  copy:
    src: files/etc/issue.net
    dest: /etc/issue.net
    owner: root
    group: root
    mode: 0644
  become: true
  become_user: root



# CIS 1.7.2 Ensure GDM login banner is configured
# No need to do anyhting regarding this since we do not install GDM in the first place

# we don't need to do this if all our repos point at -current
# CIS 1.8 Ensure updates, patches, and additional security software are installed


#- name: Upgrade all packages to the latest version
#  yum:
#      name: "*"
#      state: latest
#      exclude: subscription-manager*
#  become: true
#  become_user: root

- name: remove subscription-manager package # customized task as this packages are removed by kickstart --> againg automatically installed as dependencied --> creating problem at yum update
  yum:
    name: "subscription-manager*"
    state: absent
  become: true
  become_user: root

# to make yum working make sure plugin ulninfo is disabled after yum update
- name: disable ulninfo
  shell: "sudo sed -i 's/1/0/' /etc/yum/pluginconf.d/ulninfo.conf"
  ignore_errors: yes # in case file not found
  become: true
  become_user: root

# since centos in edpc on yum update installs a package called centos-release which places repo files in yum.repo.d with base url pointing to internat, which stop yum to work .. task below is to delete unnecessary repo files from yum.repo.d
#- name: disable ulninfo
#  shell: "sudo find /etc/yum.repos.d/  ! -name '*.mirrorlist' ! -name 'local.repo' -type f -exec rm -f {} +"
#  ignore_errors: yes # in case file not found
#  become: true
#  become_user: root

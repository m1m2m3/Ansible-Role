- name: "SCORED | 3.1.1 | PATCH | Ensure IP forwarding is disabled"
  sysctl:
      name: net.ipv4.ip_forward
      value: 0
      state: present
      reload: yes
      ignoreerrors: yes
  notify:
      - sysctl flush ipv4 route table
  become: true
  become_user: root

- name: "SCORED | 3.1.2 | PATCH | Ensure packet redirect sending is disabled"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.send_redirects, value: 0 }
      - { name: net.ipv4.conf.default.send_redirects, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  become: true
  become_user: root

- name: "SCORED | 3.2.1 | PATCH | Ensure source routed packets are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.accept_source_route, value: 0 }
      - { name: net.ipv4.conf.default.accept_source_route, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  become: true
  become_user: root

- name: "SCORED | 3.2.2 | PATCH | Ensure ICMP redirects are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.accept_redirects, value: 0 }
      - { name: net.ipv4.conf.default.accept_redirects, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  become: true
  become_user: root

- name: "SCORED | 3.2.3 | PATCH | Ensure secure ICMP redirects are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.secure_redirects, value: 0 }
      - { name: net.ipv4.conf.default.secure_redirects, value: 0 }
  notify:
      - sysctl flush ipv4 route table
  become: true
  become_user: root

- name: "SCORED | 3.2.4 | PATCH | Ensure suspicious packets are logged"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.log_martians, value: 1 }
      - { name: net.ipv4.conf.default.log_martians, value: 1 }
  notify:
      - sysctl flush ipv4 route table
  become: true
  become_user: root

- name: "SCORED | 3.2.5 | PATCH | Ensure broadcast ICMP requests are ignored"
  sysctl:
      name: net.ipv4.icmp_echo_ignore_broadcasts
      value: 1
      state: present
      reload: yes
      ignoreerrors: yes
  notify:
      - sysctl flush ipv4 route table
  become: true
  become_user: root

- name: "SCORED | 3.2.6 | PATCH | Ensure bogus ICMP responses are ignored"
  sysctl:
      name: net.ipv4.icmp_ignore_bogus_error_responses
      value: 1
      state: present
      reload: yes
      ignoreerrors: yes
  notify:
      - sysctl flush ipv4 route table
  become: true
  become_user: root

- name: "SCORED | 3.2.7 | PATCH | Ensure Reverse Path Filtering is enabled"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv4.conf.all.rp_filter, value: 1 }
      - { name: net.ipv4.conf.default.rp_filter, value: 1 }
  notify:
      - sysctl flush ipv4 route table
  become: true
  become_user: root

- name: "SCORED | 3.2.8 | PATCH | Ensure TCP SYN Cookies is enabled"
  sysctl:
      name: net.ipv4.tcp_syncookies
      value: 1
      state: present
      reload: yes
      ignoreerrors: yes
  notify:
      - sysctl flush ipv4 route table
  become: true
  become_user: root






- name: "SCORED | 3.3.1 | PATCH | Ensure IPv6 router advertisements are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv6.conf.all.accept_ra, value: 0 }
      - { name: net.ipv6.conf.default.accept_ra, value: 0 }
  notify:
      - sysctl flush ipv6 route table
  become: true
  become_user: root

- name: "SCORED | 3.3.2 | PATCH | Ensure IPv6 redirects are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: yes
      state: present
      reload: yes
      ignoreerrors: yes
  with_items:
      - { name: net.ipv6.conf.all.accept_redirects, value: 0 }
      - { name: net.ipv6.conf.default.accept_redirects, value: 0 }
  notify:
      - sysctl flush ipv6 route table
  become: true
  become_user: root

# CIS 3.3.3 Ensure IPv6 is disabled (Not Scored)
- name: 3.3.3 Ensure IPv6 is disabled (Not Scored)
  sysctl:
    name: "{{ item }}"
    value: 1
    state: present
  with_items:
    - net.ipv6.conf.all.disable_ipv6
    - net.ipv6.conf.default.disable_ipv6
    - net.ipv6.conf.lo.disable_ipv6
  when: rhel7cis_ipv6_required == false
  become: true
  become_user: root
  
- name: Disable ipv6 from ssh
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: '^#?AddressFamily any'
    line: 'AddressFamily inet'
    state: present

- name: "SCORED | 3.4.1 | PATCH | Ensure TCP Wrappers is installed"
  yum:
    name: tcp_wrappers
    state: present
  become: true
  become_user: root

- name: "NOTSCORED | 3.5.1 | PATCH | Ensure DCCP is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install dccp(\\s|$)"
      line: "install dccp /bin/true"
      create: yes
  become: true
  become_user: root

- name: "NOTSCORED | 3.5.2 | PATCH | Ensure SCTP is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install sctp(\\s|$)"
      line: "install sctp /bin/true"
      create: yes
  become: true
  become_user: root

- name: "NOTSCORED | 3.5.3 | PATCH | Ensure RDS is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install rds(\\s|$)"
      line: "install rds /bin/true"
      create: yes
  become: true
  become_user: root

- name: "NOTSCORED | 3.5.4 | PATCH | Ensure TIPC is disabled"
  lineinfile:
      dest: /etc/modprobe.d/CIS.conf
      regexp: "^(#)?install tipc(\\s|$)"
      line: "install tipc /bin/true"
      create: yes
  become: true
  become_user: root

- name: "SCORED | 3.6 | PATCH | Ensure firewalld is installed and started | CUSTOM"
  yum:
      name: firewalld
      state: present
  become: true
  become_user: root

- name: "SCORED | 3.6 | PATCH | Ensure firewalld is installed and started | CUSTOM"
  service:
      name: firewalld
      state: started
      enabled: yes
  become: true
  become_user: root

#- name: "SCORED | 3.6.1 | PATCH | Ensure iptables is installed"
#  yum:
#      name: iptables
#      state: present
#  become: true
#  become_user: root

# Not needed
#- name: "SCORED | 3.6.1 | PATCH | Ensure iptables is installed and started"
#  service:
#      name: iptables
#      state: started
#      enabled: yes
#  become: true
#  become_user: root

- name: "SCORED | 3.6.2 | PATCH | Ensure default deny firewall policy"
  lineinfile:
      dest: /etc/firewalld/firewalld.conf
      regexp: "^DefaultZone"
      line: "DefaultZone=drop"
  become: true
  become_user: root

- name: "SCORED | 3.6.2 | PATCH | Ensure default deny firewall policy"
  firewalld:
      state: enabled
      zone: drop
      permanent: true
  become: true
  become_user: root

#- name: "SCORED | 3.6.2 | PATCH | Ensure default deny firewall policy"
#  command: /bin/true
#  changed_when: no
#  become: true
#  become_user: root

#- name: "SCORED | 3.6.3 | PATCH | Ensure loopback traffic is configured"
#  command: /bin/true
#  changed_when: no
#  become: true
#  become_user: root

#- name: "NOTSCORED | 3.6.4 | PATCH | Ensure outbound and established connections are configured"
#  command: /bin/true
#  changed_when: no
#  become: true
#  become_user: root

- name: "SCORED | 3.6.5 | PATCH | Ensure firewall rules exist for all open ports"
  firewalld:
      service: "{{ item }}"
      state: enabled
      zone: drop
      permanent: true
      immediate: true
  notify: restart firewalld
  with_items: "{{ rhel7cis_firewall_services }}"
  become: true
  become_user: root

#- name: "SCORED | 3.6.5 | PATCH | Ensure firewall rules exist for all open ports"
#  command: /bin/true
#  changed_when: no
#  become: true
#  become_user: root

## NOTSCORED | 3.7 | PATCH | Ensure wireless interfaces are disabled 
##(since this methode only work with centos currently this is being skipped)
#- name: "NOTSCORED | 3.7 | PATCH | Ensure wireless interfaces are disabled"
#  command: nmcli radio wifi off
#  become: true
#  become_user: root
